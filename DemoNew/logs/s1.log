Calling target program-options parser
[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.ipv4_lpm': NoAction - 
[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.root': MyIngress.null_end - 
[03:43:30.395] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000003
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.set_leaf - 2,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 2 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 3 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 3
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 4
Action entry: MyIngress.set_leaf - 3,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 4 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 4
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 5
Action entry: MyIngress.null_end - 

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 5 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 5
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 6
Action entry: MyIngress.set_leaf - 4,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 6 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 7 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 8 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 9 added to table 'MyIngress.root'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 9
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 10
Action entry: MyIngress.set_leaf - 9,

[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.node1': MyIngress.null_end - 
[03:43:30.395] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.node1'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.node1'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0004 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.set_leaf - 6,

[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'tbl_NoAction': NoAction - 
[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf1': MyIngress.drop - 
[03:43:30.395] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf1'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a9 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf2': MyIngress.drop - 
[03:43:30.395] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf2'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a11 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf3': MyIngress.drop - 
[03:43:30.395] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf3'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a8 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.leaf3'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf4': MyIngress.drop - 
[03:43:30.395] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf4'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a3 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.leaf4'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 2 added to table 'MyIngress.leaf4'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf5': MyIngress.drop - 
[03:43:30.395] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf5'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a2 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.leaf5'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:30.395] [bmv2] [D] [thread 5044] Entry 2 added to table 'MyIngress.leaf5'
[03:43:30.395] [bmv2] [D] [thread 5044] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf6': MyIngress.drop - 
[03:43:30.396] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf6'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0004 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a4 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.leaf6'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Entry 2 added to table 'MyIngress.leaf6'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf7': MyIngress.drop - 
[03:43:30.396] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf7'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a0 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.leaf7'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 2
Action entry: MyIngress.a5 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf8': MyIngress.drop - 
[03:43:30.396] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf8'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a7 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.leaf8'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Set default default entry for table 'MyIngress.leaf9': MyIngress.drop - 
[03:43:30.396] [bmv2] [D] [thread 5044] Entry 0 added to table 'MyIngress.leaf9'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a0 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Entry 1 added to table 'MyIngress.leaf9'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0002 -> 0002
* meta.dport          : RANGE     0003 -> 0003
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 2
Action entry: MyIngress.a1 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Entry 2 added to table 'MyIngress.leaf9'
[03:43:30.396] [bmv2] [D] [thread 5044] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0003 -> 0003
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.a6 - 

[03:43:30.396] [bmv2] [D] [thread 5044] Set default default entry for table 'tbl_drop': MyIngress.drop - 
Adding interface s1-eth1 as port 1
[03:43:30.397] [bmv2] [D] [thread 5044] Adding interface s1-eth1 as port 1
Adding interface s1-eth2 as port 2
[03:43:30.424] [bmv2] [D] [thread 5044] Adding interface s1-eth2 as port 2
I0608 03:43:30.449038350    5044 server_builder.cc:247]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2147483647, CQ timeout (msec): 1000
Server listening on 0.0.0.0:50051
[03:43:30.452] [bmv2] [I] [thread 5044] Starting Thrift server on port 9090
[03:43:30.453] [bmv2] [I] [thread 5044] Thrift server was started
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Processing packet received on port 2
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Parser 'parser': start
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Extracting header 'ethernet'
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:30.968] [bmv2] [T] [thread 5051] [0.0] [cxt 0] Bytes parsed: 14
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Parser 'parser': end
[03:43:30.968] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Pipeline 'ingress': start
[03:43:30.969] [bmv2] [T] [thread 5051] [0.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:30.969] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Pipeline 'ingress': end
[03:43:30.969] [bmv2] [D] [thread 5051] [0.0] [cxt 0] Egress port is 0
[03:43:30.969] [bmv2] [D] [thread 5052] [0.0] [cxt 0] Pipeline 'egress': start
[03:43:30.969] [bmv2] [D] [thread 5052] [0.0] [cxt 0] Pipeline 'egress': end
[03:43:30.969] [bmv2] [D] [thread 5052] [0.0] [cxt 0] Deparser 'deparser': start
[03:43:30.969] [bmv2] [T] [thread 5052] [0.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:30.969] [bmv2] [D] [thread 5052] [0.0] [cxt 0] Deparsing header 'ethernet'
[03:43:30.969] [bmv2] [D] [thread 5052] [0.0] [cxt 0] Deparser 'deparser': end
[03:43:30.969] [bmv2] [D] [thread 5056] [0.0] [cxt 0] Transmitting packet of size 90 out of port 0
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Processing packet received on port 1
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Parser 'parser': start
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Extracting header 'ethernet'
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:31.065] [bmv2] [T] [thread 5051] [1.0] [cxt 0] Bytes parsed: 14
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Parser 'parser': end
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Pipeline 'ingress': start
[03:43:31.065] [bmv2] [T] [thread 5051] [1.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Pipeline 'ingress': end
[03:43:31.065] [bmv2] [D] [thread 5051] [1.0] [cxt 0] Egress port is 0
[03:43:31.065] [bmv2] [D] [thread 5052] [1.0] [cxt 0] Pipeline 'egress': start
[03:43:31.065] [bmv2] [D] [thread 5052] [1.0] [cxt 0] Pipeline 'egress': end
[03:43:31.065] [bmv2] [D] [thread 5052] [1.0] [cxt 0] Deparser 'deparser': start
[03:43:31.065] [bmv2] [T] [thread 5052] [1.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:31.065] [bmv2] [D] [thread 5052] [1.0] [cxt 0] Deparsing header 'ethernet'
[03:43:31.065] [bmv2] [D] [thread 5052] [1.0] [cxt 0] Deparser 'deparser': end
[03:43:31.065] [bmv2] [D] [thread 5056] [1.0] [cxt 0] Transmitting packet of size 78 out of port 0
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Processing packet received on port 1
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Parser 'parser': start
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Extracting header 'ethernet'
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:31.068] [bmv2] [T] [thread 5051] [2.0] [cxt 0] Bytes parsed: 14
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Parser 'parser': end
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Pipeline 'ingress': start
[03:43:31.068] [bmv2] [T] [thread 5051] [2.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Pipeline 'ingress': end
[03:43:31.068] [bmv2] [D] [thread 5051] [2.0] [cxt 0] Egress port is 0
[03:43:31.068] [bmv2] [D] [thread 5052] [2.0] [cxt 0] Pipeline 'egress': start
[03:43:31.068] [bmv2] [D] [thread 5052] [2.0] [cxt 0] Pipeline 'egress': end
[03:43:31.068] [bmv2] [D] [thread 5052] [2.0] [cxt 0] Deparser 'deparser': start
[03:43:31.068] [bmv2] [T] [thread 5052] [2.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:31.068] [bmv2] [D] [thread 5052] [2.0] [cxt 0] Deparsing header 'ethernet'
[03:43:31.068] [bmv2] [D] [thread 5052] [2.0] [cxt 0] Deparser 'deparser': end
[03:43:31.068] [bmv2] [D] [thread 5056] [2.0] [cxt 0] Transmitting packet of size 90 out of port 0
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Processing packet received on port 2
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Parser 'parser': start
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Extracting header 'ethernet'
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:31.352] [bmv2] [T] [thread 5051] [3.0] [cxt 0] Bytes parsed: 14
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Parser 'parser': end
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Pipeline 'ingress': start
[03:43:31.352] [bmv2] [T] [thread 5051] [3.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Pipeline 'ingress': end
[03:43:31.352] [bmv2] [D] [thread 5051] [3.0] [cxt 0] Egress port is 0
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Processing packet received on port 2
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Parser 'parser': start
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Extracting header 'ethernet'
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:31.352] [bmv2] [T] [thread 5051] [4.0] [cxt 0] Bytes parsed: 14
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Parser 'parser': end
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Pipeline 'ingress': start
[03:43:31.352] [bmv2] [T] [thread 5051] [4.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Pipeline 'ingress': end
[03:43:31.352] [bmv2] [D] [thread 5051] [4.0] [cxt 0] Egress port is 0
[03:43:31.352] [bmv2] [D] [thread 5052] [3.0] [cxt 0] Pipeline 'egress': start
[03:43:31.352] [bmv2] [D] [thread 5052] [3.0] [cxt 0] Pipeline 'egress': end
[03:43:31.352] [bmv2] [D] [thread 5052] [3.0] [cxt 0] Deparser 'deparser': start
[03:43:31.352] [bmv2] [T] [thread 5052] [3.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:31.352] [bmv2] [D] [thread 5052] [3.0] [cxt 0] Deparsing header 'ethernet'
[03:43:31.352] [bmv2] [D] [thread 5052] [3.0] [cxt 0] Deparser 'deparser': end
[03:43:31.352] [bmv2] [D] [thread 5052] [4.0] [cxt 0] Pipeline 'egress': start
[03:43:31.352] [bmv2] [D] [thread 5052] [4.0] [cxt 0] Pipeline 'egress': end
[03:43:31.352] [bmv2] [D] [thread 5052] [4.0] [cxt 0] Deparser 'deparser': start
[03:43:31.352] [bmv2] [T] [thread 5052] [4.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:31.352] [bmv2] [D] [thread 5052] [4.0] [cxt 0] Deparsing header 'ethernet'
[03:43:31.352] [bmv2] [D] [thread 5052] [4.0] [cxt 0] Deparser 'deparser': end
[03:43:31.352] [bmv2] [D] [thread 5056] [3.0] [cxt 0] Transmitting packet of size 90 out of port 0
[03:43:31.352] [bmv2] [D] [thread 5056] [4.0] [cxt 0] Transmitting packet of size 70 out of port 0
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Processing packet received on port 2
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Parser 'parser': start
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Extracting header 'ethernet'
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:31.656] [bmv2] [T] [thread 5051] [5.0] [cxt 0] Bytes parsed: 14
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Parser 'parser': end
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Pipeline 'ingress': start
[03:43:31.656] [bmv2] [T] [thread 5051] [5.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Pipeline 'ingress': end
[03:43:31.656] [bmv2] [D] [thread 5051] [5.0] [cxt 0] Egress port is 0
[03:43:31.656] [bmv2] [D] [thread 5052] [5.0] [cxt 0] Pipeline 'egress': start
[03:43:31.656] [bmv2] [D] [thread 5052] [5.0] [cxt 0] Pipeline 'egress': end
[03:43:31.656] [bmv2] [D] [thread 5052] [5.0] [cxt 0] Deparser 'deparser': start
[03:43:31.656] [bmv2] [T] [thread 5052] [5.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:31.656] [bmv2] [D] [thread 5052] [5.0] [cxt 0] Deparsing header 'ethernet'
[03:43:31.656] [bmv2] [D] [thread 5052] [5.0] [cxt 0] Deparser 'deparser': end
[03:43:31.656] [bmv2] [D] [thread 5056] [5.0] [cxt 0] Transmitting packet of size 90 out of port 0
New connection
P4Runtime SetForwardingPipelineConfig
[03:43:31.933] [bmv2] [W] [thread 5068] [P4Runtime] p4::tmp::P4DeviceConfig is deprecated
[03:43:31.937] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.ipv4_lpm': NoAction - 
[03:43:31.937] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.root': MyIngress.null_end - 
[03:43:31.937] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.root'
[03:43:31.937] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:43:31.937] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000003
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.set_leaf - 2,

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 2 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 3 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 3
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 4
Action entry: MyIngress.set_leaf - 3,

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 4 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 4
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 5
Action entry: MyIngress.null_end - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 5 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 5
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 6
Action entry: MyIngress.set_leaf - 4,

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 6 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 7 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 8 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 9 added to table 'MyIngress.root'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 9
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 10
Action entry: MyIngress.set_leaf - 9,

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.node1': MyIngress.null_end - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.node1'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.node1'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0004 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.set_leaf - 6,

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'tbl_NoAction': NoAction - 
[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf1': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf1'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a9 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf2': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf2'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a11 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf3': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf3'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a8 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.leaf3'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf4': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf4'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a3 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.leaf4'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 2 added to table 'MyIngress.leaf4'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf5': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf5'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a2 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.leaf5'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 2 added to table 'MyIngress.leaf5'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf6': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf6'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0004 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a4 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.leaf6'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 2 added to table 'MyIngress.leaf6'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf7': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf7'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a0 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.leaf7'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 2
Action entry: MyIngress.a5 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf8': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf8'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a7 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.leaf8'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'MyIngress.leaf9': MyIngress.drop - 
[03:43:31.938] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.leaf9'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a0 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.leaf9'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000001
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0002 -> 0002
* meta.dport          : RANGE     0003 -> 0003
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 2
Action entry: MyIngress.a1 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Entry 2 added to table 'MyIngress.leaf9'
[03:43:31.938] [bmv2] [D] [thread 5068] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     0000000e -> 0000000f
* meta.sport          : RANGE     0003 -> 0003
* meta.dport          : RANGE     0003 -> 0003
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.a6 - 

[03:43:31.938] [bmv2] [D] [thread 5068] Set default default entry for table 'tbl_drop': MyIngress.drop - 
P4Runtime Write
election_id {
  low: 1
}
updates {
  type: INSERT
  entity {
    table_entry {
      table_id: 33574068
      match {
        field_id: 1
        lpm {
          value: "\200\000\000\000"
          prefix_len: 1
        }
      }
      action {
        action {
          action_id: 16799317
          params {
            param_id: 1
            value: "\010\000\000\000\001\001"
          }
          params {
            param_id: 2
            value: "\000\002"
          }
        }
      }
    }
  }
}
[03:43:31.945] [bmv2] [D] [thread 5068] Entry 0 added to table 'MyIngress.ipv4_lpm'
[03:43:31.945] [bmv2] [D] [thread 5068] Dumping entry 0
Match key:
* hdr.ipv4.dstAddr    : LPM       80000000/1
Action entry: MyIngress.ipv4_forward - 80000000101,2,

P4Runtime Write
election_id {
  low: 1
}
updates {
  type: INSERT
  entity {
    table_entry {
      table_id: 33574068
      match {
        field_id: 1
        lpm {
          value: "\000\000\000\000"
          prefix_len: 1
        }
      }
      action {
        action {
          action_id: 16799317
          params {
            param_id: 1
            value: "\010\000\000\000\002\002"
          }
          params {
            param_id: 2
            value: "\000\002"
          }
        }
      }
    }
  }
}
[03:43:31.947] [bmv2] [D] [thread 5068] Entry 1 added to table 'MyIngress.ipv4_lpm'
[03:43:31.947] [bmv2] [D] [thread 5068] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

Connection removed
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Processing packet received on port 1
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Parser 'parser': start
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Extracting header 'ethernet'
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:32.070] [bmv2] [T] [thread 5051] [6.0] [cxt 0] Bytes parsed: 14
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Parser 'parser': end
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Pipeline 'ingress': start
[03:43:32.070] [bmv2] [T] [thread 5051] [6.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Pipeline 'ingress': end
[03:43:32.070] [bmv2] [D] [thread 5051] [6.0] [cxt 0] Egress port is 0
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Processing packet received on port 1
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Parser 'parser': start
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Extracting header 'ethernet'
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:32.070] [bmv2] [T] [thread 5051] [7.0] [cxt 0] Bytes parsed: 14
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Parser 'parser': end
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Pipeline 'ingress': start
[03:43:32.070] [bmv2] [T] [thread 5051] [7.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Pipeline 'ingress': end
[03:43:32.070] [bmv2] [D] [thread 5051] [7.0] [cxt 0] Egress port is 0
[03:43:32.070] [bmv2] [D] [thread 5052] [6.0] [cxt 0] Pipeline 'egress': start
[03:43:32.070] [bmv2] [D] [thread 5052] [6.0] [cxt 0] Pipeline 'egress': end
[03:43:32.070] [bmv2] [D] [thread 5052] [6.0] [cxt 0] Deparser 'deparser': start
[03:43:32.070] [bmv2] [T] [thread 5052] [6.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:32.070] [bmv2] [D] [thread 5052] [6.0] [cxt 0] Deparsing header 'ethernet'
[03:43:32.070] [bmv2] [D] [thread 5052] [6.0] [cxt 0] Deparser 'deparser': end
[03:43:32.070] [bmv2] [D] [thread 5052] [7.0] [cxt 0] Pipeline 'egress': start
[03:43:32.070] [bmv2] [D] [thread 5052] [7.0] [cxt 0] Pipeline 'egress': end
[03:43:32.070] [bmv2] [D] [thread 5052] [7.0] [cxt 0] Deparser 'deparser': start
[03:43:32.070] [bmv2] [T] [thread 5052] [7.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:32.070] [bmv2] [D] [thread 5052] [7.0] [cxt 0] Deparsing header 'ethernet'
[03:43:32.070] [bmv2] [D] [thread 5052] [7.0] [cxt 0] Deparser 'deparser': end
[03:43:32.070] [bmv2] [D] [thread 5056] [6.0] [cxt 0] Transmitting packet of size 90 out of port 0
[03:43:32.071] [bmv2] [D] [thread 5056] [7.0] [cxt 0] Transmitting packet of size 70 out of port 0
[03:43:32.668] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Processing packet received on port 1
[03:43:32.668] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Parser 'parser': start
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Extracting header 'ethernet'
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:32.669] [bmv2] [T] [thread 5051] [8.0] [cxt 0] Bytes parsed: 14
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Parser 'parser': end
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Pipeline 'ingress': start
[03:43:32.669] [bmv2] [T] [thread 5051] [8.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Pipeline 'ingress': end
[03:43:32.669] [bmv2] [D] [thread 5051] [8.0] [cxt 0] Egress port is 0
[03:43:32.669] [bmv2] [D] [thread 5052] [8.0] [cxt 0] Pipeline 'egress': start
[03:43:32.669] [bmv2] [D] [thread 5052] [8.0] [cxt 0] Pipeline 'egress': end
[03:43:32.669] [bmv2] [D] [thread 5052] [8.0] [cxt 0] Deparser 'deparser': start
[03:43:32.669] [bmv2] [T] [thread 5052] [8.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:32.669] [bmv2] [D] [thread 5052] [8.0] [cxt 0] Deparsing header 'ethernet'
[03:43:32.669] [bmv2] [D] [thread 5052] [8.0] [cxt 0] Deparser 'deparser': end
[03:43:32.669] [bmv2] [D] [thread 5056] [8.0] [cxt 0] Transmitting packet of size 90 out of port 0
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Processing packet received on port 2
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Parser 'parser': start
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Extracting header 'ethernet'
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:35.357] [bmv2] [T] [thread 5051] [9.0] [cxt 0] Bytes parsed: 14
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Parser 'parser': end
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Pipeline 'ingress': start
[03:43:35.357] [bmv2] [T] [thread 5051] [9.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Pipeline 'ingress': end
[03:43:35.357] [bmv2] [D] [thread 5051] [9.0] [cxt 0] Egress port is 0
[03:43:35.357] [bmv2] [D] [thread 5052] [9.0] [cxt 0] Pipeline 'egress': start
[03:43:35.357] [bmv2] [D] [thread 5052] [9.0] [cxt 0] Pipeline 'egress': end
[03:43:35.357] [bmv2] [D] [thread 5052] [9.0] [cxt 0] Deparser 'deparser': start
[03:43:35.357] [bmv2] [T] [thread 5052] [9.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:35.357] [bmv2] [D] [thread 5052] [9.0] [cxt 0] Deparsing header 'ethernet'
[03:43:35.357] [bmv2] [D] [thread 5052] [9.0] [cxt 0] Deparser 'deparser': end
[03:43:35.357] [bmv2] [D] [thread 5056] [9.0] [cxt 0] Transmitting packet of size 70 out of port 0
[03:43:36.078] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Processing packet received on port 1
[03:43:36.078] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Parser 'parser': start
[03:43:36.078] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:36.078] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:36.079] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:36.079] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Extracting header 'ethernet'
[03:43:36.079] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:36.079] [bmv2] [T] [thread 5051] [10.0] [cxt 0] Bytes parsed: 14
[03:43:36.079] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Parser 'parser': end
[03:43:36.079] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Pipeline 'ingress': start
[03:43:36.079] [bmv2] [T] [thread 5051] [10.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:36.079] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Pipeline 'ingress': end
[03:43:36.079] [bmv2] [D] [thread 5051] [10.0] [cxt 0] Egress port is 0
[03:43:36.079] [bmv2] [D] [thread 5052] [10.0] [cxt 0] Pipeline 'egress': start
[03:43:36.079] [bmv2] [D] [thread 5052] [10.0] [cxt 0] Pipeline 'egress': end
[03:43:36.079] [bmv2] [D] [thread 5052] [10.0] [cxt 0] Deparser 'deparser': start
[03:43:36.079] [bmv2] [T] [thread 5052] [10.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:36.079] [bmv2] [D] [thread 5052] [10.0] [cxt 0] Deparsing header 'ethernet'
[03:43:36.079] [bmv2] [D] [thread 5052] [10.0] [cxt 0] Deparser 'deparser': end
[03:43:36.079] [bmv2] [D] [thread 5056] [10.0] [cxt 0] Transmitting packet of size 70 out of port 0
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Processing packet received on port 2
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Parser 'parser': start
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Extracting header 'ethernet'
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:39.364] [bmv2] [T] [thread 5051] [11.0] [cxt 0] Bytes parsed: 14
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Parser 'parser': end
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Pipeline 'ingress': start
[03:43:39.364] [bmv2] [T] [thread 5051] [11.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Pipeline 'ingress': end
[03:43:39.364] [bmv2] [D] [thread 5051] [11.0] [cxt 0] Egress port is 0
[03:43:39.364] [bmv2] [D] [thread 5052] [11.0] [cxt 0] Pipeline 'egress': start
[03:43:39.364] [bmv2] [D] [thread 5052] [11.0] [cxt 0] Pipeline 'egress': end
[03:43:39.364] [bmv2] [D] [thread 5052] [11.0] [cxt 0] Deparser 'deparser': start
[03:43:39.364] [bmv2] [T] [thread 5052] [11.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:39.364] [bmv2] [D] [thread 5052] [11.0] [cxt 0] Deparsing header 'ethernet'
[03:43:39.364] [bmv2] [D] [thread 5052] [11.0] [cxt 0] Deparser 'deparser': end
[03:43:39.364] [bmv2] [D] [thread 5056] [11.0] [cxt 0] Transmitting packet of size 70 out of port 0
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Processing packet received on port 1
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Parser 'parser': start
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Extracting header 'ethernet'
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Parser state 'start': key is 86dd
[03:43:40.085] [bmv2] [T] [thread 5051] [12.0] [cxt 0] Bytes parsed: 14
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Parser 'parser': end
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Pipeline 'ingress': start
[03:43:40.085] [bmv2] [T] [thread 5051] [12.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is false
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Pipeline 'ingress': end
[03:43:40.085] [bmv2] [D] [thread 5051] [12.0] [cxt 0] Egress port is 0
[03:43:40.085] [bmv2] [D] [thread 5052] [12.0] [cxt 0] Pipeline 'egress': start
[03:43:40.085] [bmv2] [D] [thread 5052] [12.0] [cxt 0] Pipeline 'egress': end
[03:43:40.085] [bmv2] [D] [thread 5052] [12.0] [cxt 0] Deparser 'deparser': start
[03:43:40.085] [bmv2] [T] [thread 5052] [12.0] [cxt 0] Skipping checksum 'cksum' update because condition not met
[03:43:40.085] [bmv2] [D] [thread 5052] [12.0] [cxt 0] Deparsing header 'ethernet'
[03:43:40.085] [bmv2] [D] [thread 5052] [12.0] [cxt 0] Deparser 'deparser': end
[03:43:40.086] [bmv2] [D] [thread 5056] [12.0] [cxt 0] Transmitting packet of size 70 out of port 0
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Processing packet received on port 1
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser 'parser': start
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Extracting header 'ethernet'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser state 'start': key is 0800
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Bytes parsed: 14
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Extracting header 'ipv4'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Bytes parsed: 34
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Extracting header 'udp'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Bytes parsed: 42
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Parser 'parser': end
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Pipeline 'ingress': start
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000000

[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0003
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:43:48.739] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Action MyIngress.set_leaf
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:48.739] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:48.740] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:48.740] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:43:48.740] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:43:48.740] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0003
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:43:48.740] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Table 'MyIngress.leaf1': hit with handle 0
[03:43:48.740] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a9 - 

[03:43:48.740] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Action entry is MyIngress.a9 - 
[03:43:48.740] [bmv2] [T] [thread 5051] [13.0] [cxt 0] Action MyIngress.a9
[03:43:48.740] [bmv2] [T] [thread 5051] [13.0] [cxt 0] DemoNew.p4(168) Primitive hdr.ipv4.tos = 9
[03:43:48.740] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Pipeline 'ingress': end
[03:43:48.740] [bmv2] [D] [thread 5051] [13.0] [cxt 0] Egress port is 2
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Pipeline 'egress': start
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Pipeline 'egress': end
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Deparser 'deparser': start
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Updating checksum 'cksum'
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Deparsing header 'ethernet'
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Deparsing header 'ipv4'
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Deparsing header 'udp'
[03:43:48.740] [bmv2] [D] [thread 5054] [13.0] [cxt 0] Deparser 'deparser': end
[03:43:48.740] [bmv2] [D] [thread 5056] [13.0] [cxt 0] Transmitting packet of size 51 out of port 2
[03:43:49.936] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Processing packet received on port 1
[03:43:49.936] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser 'parser': start
[03:43:49.936] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:49.936] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Extracting header 'ethernet'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser state 'start': key is 0800
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Bytes parsed: 14
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Extracting header 'ipv4'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Bytes parsed: 34
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Extracting header 'udp'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (3)
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Bytes parsed: 42
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Parser 'parser': end
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Pipeline 'ingress': start
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000c

[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000c
* meta.sport          : 0004
* meta.dport          : 0003
* hdr.ipv4.protocol   : 11

[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Table 'MyIngress.root': hit with handle 9
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Dumping entry 9
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 10
Action entry: MyIngress.set_leaf - 9,

[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Action entry is MyIngress.set_leaf - 9,
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Action MyIngress.set_leaf
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is true
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Applying table 'MyIngress.leaf9'
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000c
* meta.sport          : 0004
* meta.dport          : 0003
* hdr.ipv4.protocol   : 11

[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Table 'MyIngress.leaf9': miss
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Action entry is MyIngress.drop - 
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] Action MyIngress.drop
[03:43:49.937] [bmv2] [T] [thread 5051] [14.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Pipeline 'ingress': end
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Egress port is 511
[03:43:49.937] [bmv2] [D] [thread 5051] [14.0] [cxt 0] Dropping packet at the end of ingress
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Processing packet received on port 1
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser 'parser': start
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Extracting header 'ethernet'
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser state 'start': key is 0800
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Bytes parsed: 14
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Extracting header 'ipv4'
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Bytes parsed: 34
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Extracting header 'tcp'
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (2)
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Bytes parsed: 54
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Parser 'parser': end
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Pipeline 'ingress': start
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000e

[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:51.130] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:51.130] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Action MyIngress.set_leaf
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 1
[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] Action MyIngress.a11
[03:43:51.131] [bmv2] [T] [thread 5051] [15.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Pipeline 'ingress': end
[03:43:51.131] [bmv2] [D] [thread 5051] [15.0] [cxt 0] Egress port is 2
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Pipeline 'egress': start
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Pipeline 'egress': end
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Deparser 'deparser': start
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Updating checksum 'cksum'
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Deparsing header 'ethernet'
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Deparsing header 'ipv4'
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Deparsing header 'tcp'
[03:43:51.131] [bmv2] [D] [thread 5054] [15.0] [cxt 0] Deparser 'deparser': end
[03:43:51.132] [bmv2] [D] [thread 5056] [15.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:43:52.346] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Processing packet received on port 1
[03:43:52.346] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser 'parser': start
[03:43:52.346] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Extracting header 'ethernet'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser state 'start': key is 0800
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Bytes parsed: 14
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Extracting header 'ipv4'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Bytes parsed: 34
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Extracting header 'udp'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (2)
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Bytes parsed: 42
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Parser 'parser': end
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Pipeline 'ingress': start
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000003

[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Action MyIngress.set_leaf
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Table 'MyIngress.leaf1': miss
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Action entry is MyIngress.drop - 
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] Action MyIngress.drop
[03:43:52.347] [bmv2] [T] [thread 5051] [16.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Pipeline 'ingress': end
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Egress port is 511
[03:43:52.347] [bmv2] [D] [thread 5051] [16.0] [cxt 0] Dropping packet at the end of ingress
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Processing packet received on port 1
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser 'parser': start
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Extracting header 'ethernet'
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser state 'start': key is 0800
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Bytes parsed: 14
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Extracting header 'ipv4'
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Bytes parsed: 34
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Extracting header 'tcp'
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (2)
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Bytes parsed: 54
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Parser 'parser': end
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Pipeline 'ingress': start
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:53.565] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:53.565] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:53.566] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:53.566] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000003
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 06

[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Table 'MyIngress.root': hit with handle 5
[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Dumping entry 5
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 6
Action entry: MyIngress.set_leaf - 4,

[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Action entry is MyIngress.set_leaf - 4,
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Action MyIngress.set_leaf
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is true
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Applying table 'MyIngress.leaf4'
[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000003
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 06

[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Table 'MyIngress.leaf4': hit with handle 1
[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] Action MyIngress.a7
[03:43:53.567] [bmv2] [T] [thread 5051] [17.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Pipeline 'ingress': end
[03:43:53.567] [bmv2] [D] [thread 5051] [17.0] [cxt 0] Egress port is 2
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Pipeline 'egress': start
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Pipeline 'egress': end
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Deparser 'deparser': start
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Updating checksum 'cksum'
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Deparsing header 'ethernet'
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Deparsing header 'ipv4'
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Deparsing header 'tcp'
[03:43:53.568] [bmv2] [D] [thread 5054] [17.0] [cxt 0] Deparser 'deparser': end
[03:43:53.569] [bmv2] [D] [thread 5056] [17.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Processing packet received on port 1
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser 'parser': start
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Extracting header 'ethernet'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser state 'start': key is 0800
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Bytes parsed: 14
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Extracting header 'ipv4'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Bytes parsed: 34
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Extracting header 'udp'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Bytes parsed: 42
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Parser 'parser': end
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Pipeline 'ingress': start
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0004
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Action MyIngress.null_end
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Applying table 'tbl_drop'
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Looking up key:

[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Table 'tbl_drop': miss
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Action entry is MyIngress.drop - 
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] Action MyIngress.drop
[03:43:54.705] [bmv2] [T] [thread 5051] [18.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Pipeline 'ingress': end
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Egress port is 511
[03:43:54.705] [bmv2] [D] [thread 5051] [18.0] [cxt 0] Dropping packet at the end of ingress
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Processing packet received on port 1
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser 'parser': start
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Extracting header 'ethernet'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser state 'start': key is 0800
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Bytes parsed: 14
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Extracting header 'ipv4'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Bytes parsed: 34
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Extracting header 'udp'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Bytes parsed: 42
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Parser 'parser': end
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Pipeline 'ingress': start
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Table 'MyIngress.root': hit with handle 7
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Action entry is MyIngress.set_leaf - 7,
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Action MyIngress.set_leaf
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is true
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Applying table 'MyIngress.leaf7'
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Table 'MyIngress.leaf7': miss
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Action entry is MyIngress.drop - 
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] Action MyIngress.drop
[03:43:55.869] [bmv2] [T] [thread 5051] [19.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Pipeline 'ingress': end
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Egress port is 511
[03:43:55.869] [bmv2] [D] [thread 5051] [19.0] [cxt 0] Dropping packet at the end of ingress
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Processing packet received on port 1
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser 'parser': start
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Extracting header 'ethernet'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser state 'start': key is 0800
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Bytes parsed: 14
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Extracting header 'ipv4'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Bytes parsed: 34
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Extracting header 'udp'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Bytes parsed: 42
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Parser 'parser': end
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Pipeline 'ingress': start
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000008
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Table 'MyIngress.root': hit with handle 7
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Action entry is MyIngress.set_leaf - 7,
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Action MyIngress.set_leaf
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is true
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Applying table 'MyIngress.leaf7'
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000008
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Table 'MyIngress.leaf7': miss
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Action entry is MyIngress.drop - 
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] Action MyIngress.drop
[03:43:57.018] [bmv2] [T] [thread 5051] [20.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Pipeline 'ingress': end
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Egress port is 511
[03:43:57.018] [bmv2] [D] [thread 5051] [20.0] [cxt 0] Dropping packet at the end of ingress
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Processing packet received on port 1
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser 'parser': start
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Extracting header 'ethernet'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser state 'start': key is 0800
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Bytes parsed: 14
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Extracting header 'ipv4'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Bytes parsed: 34
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Extracting header 'tcp'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (4)
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Bytes parsed: 54
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Parser 'parser': end
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Pipeline 'ingress': start
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Action MyIngress.set_index
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:43:58.182] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Applying table 'MyIngress.node1'
[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:43:58.182] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Table 'MyIngress.node1': hit with handle 1
[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0004 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.set_leaf - 6,

[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Action entry is MyIngress.set_leaf - 6,
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Action MyIngress.set_leaf
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is true
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Applying table 'MyIngress.leaf6'
[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Table 'MyIngress.leaf6': hit with handle 1
[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] Action MyIngress.a7
[03:43:58.183] [bmv2] [T] [thread 5051] [21.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Pipeline 'ingress': end
[03:43:58.183] [bmv2] [D] [thread 5051] [21.0] [cxt 0] Egress port is 2
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Pipeline 'egress': start
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Pipeline 'egress': end
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Deparser 'deparser': start
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Updating checksum 'cksum'
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Deparsing header 'ethernet'
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Deparsing header 'ipv4'
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Deparsing header 'tcp'
[03:43:58.183] [bmv2] [D] [thread 5054] [21.0] [cxt 0] Deparser 'deparser': end
[03:43:58.183] [bmv2] [D] [thread 5056] [21.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Processing packet received on port 1
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser 'parser': start
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser 'parser' entering state 'start'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Extracting header 'ethernet'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser state 'start': key is 0800
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Bytes parsed: 14
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Extracting header 'ipv4'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Bytes parsed: 34
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Extracting header 'tcp'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (2)
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Bytes parsed: 54
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Parser 'parser': end
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Pipeline 'ingress': start
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Action MyIngress.ipv4_forward
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Applying table 'MyIngress.root'
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:43:59.424] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Action MyIngress.set_leaf
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:43:59.424] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:43:59.425] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:43:59.425] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 1
[03:43:59.425] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:43:59.425] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:43:59.425] [bmv2] [T] [thread 5051] [22.0] [cxt 0] Action MyIngress.a11
[03:43:59.425] [bmv2] [T] [thread 5051] [22.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:43:59.425] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Pipeline 'ingress': end
[03:43:59.425] [bmv2] [D] [thread 5051] [22.0] [cxt 0] Egress port is 2
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Pipeline 'egress': start
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Pipeline 'egress': end
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Deparser 'deparser': start
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Updating checksum 'cksum'
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Deparsing header 'ethernet'
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Deparsing header 'ipv4'
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Deparsing header 'tcp'
[03:43:59.425] [bmv2] [D] [thread 5054] [22.0] [cxt 0] Deparser 'deparser': end
[03:43:59.425] [bmv2] [D] [thread 5056] [22.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Processing packet received on port 1
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser 'parser': start
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Extracting header 'ethernet'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser state 'start': key is 0800
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Bytes parsed: 14
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Extracting header 'ipv4'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Bytes parsed: 34
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Extracting header 'udp'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Bytes parsed: 42
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Parser 'parser': end
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Pipeline 'ingress': start
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000002

[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000002
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Action MyIngress.null_end
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Applying table 'tbl_drop'
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Looking up key:

[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Table 'tbl_drop': miss
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Action entry is MyIngress.drop - 
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] Action MyIngress.drop
[03:44:00.830] [bmv2] [T] [thread 5051] [23.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Pipeline 'ingress': end
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Egress port is 511
[03:44:00.830] [bmv2] [D] [thread 5051] [23.0] [cxt 0] Dropping packet at the end of ingress
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Processing packet received on port 1
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser 'parser': start
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Extracting header 'ethernet'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser state 'start': key is 0800
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Bytes parsed: 14
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Extracting header 'ipv4'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Bytes parsed: 34
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Extracting header 'tcp'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (3)
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (3)
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Bytes parsed: 54
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Parser 'parser': end
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Pipeline 'ingress': start
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Action MyIngress.set_index
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Applying table 'MyIngress.node1'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Table 'MyIngress.node1': hit with handle 0
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Action entry is MyIngress.set_leaf - 5,
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Action MyIngress.set_leaf
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is true
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Applying table 'MyIngress.leaf5'
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Table 'MyIngress.leaf5': hit with handle 2
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] Action MyIngress.a11
[03:44:02.015] [bmv2] [T] [thread 5051] [24.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Pipeline 'ingress': end
[03:44:02.015] [bmv2] [D] [thread 5051] [24.0] [cxt 0] Egress port is 2
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Pipeline 'egress': start
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Pipeline 'egress': end
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Deparser 'deparser': start
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Updating checksum 'cksum'
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Deparsing header 'ethernet'
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Deparsing header 'ipv4'
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Deparsing header 'tcp'
[03:44:02.015] [bmv2] [D] [thread 5054] [24.0] [cxt 0] Deparser 'deparser': end
[03:44:02.015] [bmv2] [D] [thread 5056] [24.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Processing packet received on port 1
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser 'parser': start
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Extracting header 'ethernet'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser state 'start': key is 0800
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Bytes parsed: 14
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Extracting header 'ipv4'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Bytes parsed: 34
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Extracting header 'udp'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Bytes parsed: 42
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Parser 'parser': end
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Pipeline 'ingress': start
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000009

[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000006
* hdr.ipv4.dstAddr    : 00000009
* meta.sport          : 0004
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Table 'MyIngress.root': hit with handle 4
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Dumping entry 4
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 5
Action entry: MyIngress.null_end - 

[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Action MyIngress.null_end
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Applying table 'tbl_drop'
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Looking up key:

[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Table 'tbl_drop': miss
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Action entry is MyIngress.drop - 
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] Action MyIngress.drop
[03:44:03.189] [bmv2] [T] [thread 5051] [25.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Pipeline 'ingress': end
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Egress port is 511
[03:44:03.189] [bmv2] [D] [thread 5051] [25.0] [cxt 0] Dropping packet at the end of ingress
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Processing packet received on port 1
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser 'parser': start
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Extracting header 'ethernet'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser state 'start': key is 0800
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Bytes parsed: 14
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Extracting header 'ipv4'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Bytes parsed: 34
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Extracting header 'udp'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Bytes parsed: 42
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Parser 'parser': end
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Pipeline 'ingress': start
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000002

[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 00000002
* meta.sport          : 0003
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Action MyIngress.null_end
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Applying table 'tbl_drop'
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Looking up key:

[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Table 'tbl_drop': miss
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Action entry is MyIngress.drop - 
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] Action MyIngress.drop
[03:44:04.361] [bmv2] [T] [thread 5051] [26.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Pipeline 'ingress': end
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Egress port is 511
[03:44:04.361] [bmv2] [D] [thread 5051] [26.0] [cxt 0] Dropping packet at the end of ingress
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Processing packet received on port 1
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser 'parser': start
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Extracting header 'ethernet'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser state 'start': key is 0800
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Bytes parsed: 14
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Extracting header 'ipv4'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Bytes parsed: 34
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Extracting header 'tcp'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (4)
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Bytes parsed: 54
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Parser 'parser': end
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Pipeline 'ingress': start
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000e

[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0004
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:44:05.541] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Action MyIngress.set_leaf
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:44:05.541] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:44:05.542] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:44:05.542] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0004
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:44:05.542] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 0
[03:44:05.542] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a7 - 

[03:44:05.542] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:44:05.542] [bmv2] [T] [thread 5051] [27.0] [cxt 0] Action MyIngress.a7
[03:44:05.542] [bmv2] [T] [thread 5051] [27.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:44:05.542] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Pipeline 'ingress': end
[03:44:05.542] [bmv2] [D] [thread 5051] [27.0] [cxt 0] Egress port is 2
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Pipeline 'egress': start
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Pipeline 'egress': end
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Deparser 'deparser': start
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Updating checksum 'cksum'
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Deparsing header 'ethernet'
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Deparsing header 'ipv4'
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Deparsing header 'tcp'
[03:44:05.542] [bmv2] [D] [thread 5054] [27.0] [cxt 0] Deparser 'deparser': end
[03:44:05.542] [bmv2] [D] [thread 5056] [27.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Processing packet received on port 1
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser 'parser': start
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Extracting header 'ethernet'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser state 'start': key is 0800
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Bytes parsed: 14
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Extracting header 'ipv4'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Bytes parsed: 34
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Extracting header 'udp'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Bytes parsed: 42
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Parser 'parser': end
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Pipeline 'ingress': start
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000b

[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:06.713] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000009
* hdr.ipv4.dstAddr    : 0000000b
* meta.sport          : 0003
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:44:06.713] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:44:06.714] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Action MyIngress.null_end
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Applying table 'tbl_drop'
[03:44:06.714] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Looking up key:

[03:44:06.714] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Table 'tbl_drop': miss
[03:44:06.714] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Action entry is MyIngress.drop - 
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] Action MyIngress.drop
[03:44:06.714] [bmv2] [T] [thread 5051] [28.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:06.714] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Pipeline 'ingress': end
[03:44:06.714] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Egress port is 511
[03:44:06.714] [bmv2] [D] [thread 5051] [28.0] [cxt 0] Dropping packet at the end of ingress
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Processing packet received on port 1
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser 'parser': start
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Extracting header 'ethernet'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser state 'start': key is 0800
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Bytes parsed: 14
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Extracting header 'ipv4'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Bytes parsed: 34
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Extracting header 'udp'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Bytes parsed: 42
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Parser 'parser': end
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Pipeline 'ingress': start
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000000

[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Action MyIngress.set_leaf
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Table 'MyIngress.leaf1': miss
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Action entry is MyIngress.drop - 
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] Action MyIngress.drop
[03:44:08.105] [bmv2] [T] [thread 5051] [29.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Pipeline 'ingress': end
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Egress port is 511
[03:44:08.105] [bmv2] [D] [thread 5051] [29.0] [cxt 0] Dropping packet at the end of ingress
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Processing packet received on port 1
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser 'parser': start
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Extracting header 'ethernet'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser state 'start': key is 0800
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Bytes parsed: 14
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Extracting header 'ipv4'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Bytes parsed: 34
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Extracting header 'tcp'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (3)
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (3)
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Bytes parsed: 54
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Parser 'parser': end
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Pipeline 'ingress': start
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Action MyIngress.set_index
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Applying table 'MyIngress.node1'
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Table 'MyIngress.node1': hit with handle 0
[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:44:09.325] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Action entry is MyIngress.set_leaf - 5,
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Action MyIngress.set_leaf
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is true
[03:44:09.325] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Applying table 'MyIngress.leaf5'
[03:44:09.326] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:44:09.326] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Table 'MyIngress.leaf5': hit with handle 1
[03:44:09.326] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:44:09.326] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:44:09.326] [bmv2] [T] [thread 5051] [30.0] [cxt 0] Action MyIngress.a7
[03:44:09.326] [bmv2] [T] [thread 5051] [30.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:44:09.326] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Pipeline 'ingress': end
[03:44:09.326] [bmv2] [D] [thread 5051] [30.0] [cxt 0] Egress port is 2
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Pipeline 'egress': start
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Pipeline 'egress': end
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Deparser 'deparser': start
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Updating checksum 'cksum'
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Deparsing header 'ethernet'
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Deparsing header 'ipv4'
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Deparsing header 'tcp'
[03:44:09.326] [bmv2] [D] [thread 5054] [30.0] [cxt 0] Deparser 'deparser': end
[03:44:09.326] [bmv2] [D] [thread 5056] [30.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:44:10.495] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Processing packet received on port 1
[03:44:10.495] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser 'parser': start
[03:44:10.495] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:10.495] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:10.495] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:10.495] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Extracting header 'ethernet'
[03:44:10.495] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser state 'start': key is 0800
[03:44:10.495] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Bytes parsed: 14
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Extracting header 'ipv4'
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Bytes parsed: 34
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Extracting header 'tcp'
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Bytes parsed: 54
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Parser 'parser': end
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Pipeline 'ingress': start
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000006

[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000006
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Table 'MyIngress.root': hit with handle 3
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Dumping entry 3
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 4
Action entry: MyIngress.set_leaf - 3,

[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Action entry is MyIngress.set_leaf - 3,
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Action MyIngress.set_leaf
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is true
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Applying table 'MyIngress.leaf3'
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000006
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Table 'MyIngress.leaf3': hit with handle 0
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a8 - 

[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Action entry is MyIngress.a8 - 
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] Action MyIngress.a8
[03:44:10.496] [bmv2] [T] [thread 5051] [31.0] [cxt 0] DemoNew.p4(167) Primitive hdr.ipv4.tos = 8
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Pipeline 'ingress': end
[03:44:10.496] [bmv2] [D] [thread 5051] [31.0] [cxt 0] Egress port is 2
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Pipeline 'egress': start
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Pipeline 'egress': end
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Deparser 'deparser': start
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Updating checksum 'cksum'
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Deparsing header 'ethernet'
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Deparsing header 'ipv4'
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Deparsing header 'tcp'
[03:44:10.496] [bmv2] [D] [thread 5054] [31.0] [cxt 0] Deparser 'deparser': end
[03:44:10.496] [bmv2] [D] [thread 5056] [31.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:44:11.661] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Processing packet received on port 1
[03:44:11.661] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser 'parser': start
[03:44:11.661] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser 'parser' entering state 'start'
[03:44:11.661] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:44:11.661] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:44:11.661] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Extracting header 'ethernet'
[03:44:11.661] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser state 'start': key is 0800
[03:44:11.661] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Bytes parsed: 14
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Extracting header 'ipv4'
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Bytes parsed: 34
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Extracting header 'udp'
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Bytes parsed: 42
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Parser 'parser': end
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Pipeline 'ingress': start
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000003

[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Action MyIngress.ipv4_forward
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Applying table 'MyIngress.root'
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000001
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0004
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Action MyIngress.null_end
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Applying table 'tbl_drop'
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Looking up key:

[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Table 'tbl_drop': miss
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Action entry is MyIngress.drop - 
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] Action MyIngress.drop
[03:44:11.662] [bmv2] [T] [thread 5051] [32.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Pipeline 'ingress': end
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Egress port is 511
[03:44:11.662] [bmv2] [D] [thread 5051] [32.0] [cxt 0] Dropping packet at the end of ingress
[03:46:52.737] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Processing packet received on port 1
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser 'parser': start
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser 'parser' entering state 'start'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Extracting header 'ethernet'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser state 'start': key is 0800
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Bytes parsed: 14
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Extracting header 'ipv4'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Bytes parsed: 34
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Extracting header 'udp'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Bytes parsed: 42
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Parser 'parser': end
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Pipeline 'ingress': start
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000000

[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Action MyIngress.ipv4_forward
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Applying table 'MyIngress.root'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0003
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Action MyIngress.set_leaf
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0003
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Table 'MyIngress.leaf1': hit with handle 0
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a9 - 

[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Action entry is MyIngress.a9 - 
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] Action MyIngress.a9
[03:46:52.738] [bmv2] [T] [thread 5051] [33.0] [cxt 0] DemoNew.p4(168) Primitive hdr.ipv4.tos = 9
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Pipeline 'ingress': end
[03:46:52.738] [bmv2] [D] [thread 5051] [33.0] [cxt 0] Egress port is 2
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Pipeline 'egress': start
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Pipeline 'egress': end
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Deparser 'deparser': start
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Updating checksum 'cksum'
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Deparsing header 'ethernet'
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Deparsing header 'ipv4'
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Deparsing header 'udp'
[03:46:52.738] [bmv2] [D] [thread 5054] [33.0] [cxt 0] Deparser 'deparser': end
[03:46:52.738] [bmv2] [D] [thread 5056] [33.0] [cxt 0] Transmitting packet of size 51 out of port 2
[03:46:53.905] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Processing packet received on port 1
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser 'parser': start
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser 'parser' entering state 'start'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Extracting header 'ethernet'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser state 'start': key is 0800
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Bytes parsed: 14
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Extracting header 'ipv4'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Bytes parsed: 34
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Extracting header 'udp'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (3)
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Bytes parsed: 42
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Parser 'parser': end
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Pipeline 'ingress': start
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000c

[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Action MyIngress.ipv4_forward
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Applying table 'MyIngress.root'
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000c
* meta.sport          : 0004
* meta.dport          : 0003
* hdr.ipv4.protocol   : 11

[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Table 'MyIngress.root': hit with handle 9
[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Dumping entry 9
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 10
Action entry: MyIngress.set_leaf - 9,

[03:46:53.906] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Action entry is MyIngress.set_leaf - 9,
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Action MyIngress.set_leaf
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:46:53.906] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:46:53.907] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:46:53.907] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is true
[03:46:53.907] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Applying table 'MyIngress.leaf9'
[03:46:53.907] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000c
* meta.sport          : 0004
* meta.dport          : 0003
* hdr.ipv4.protocol   : 11

[03:46:53.907] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Table 'MyIngress.leaf9': miss
[03:46:53.907] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Action entry is MyIngress.drop - 
[03:46:53.907] [bmv2] [T] [thread 5051] [34.0] [cxt 0] Action MyIngress.drop
[03:46:53.907] [bmv2] [T] [thread 5051] [34.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:46:53.907] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Pipeline 'ingress': end
[03:46:53.907] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Egress port is 511
[03:46:53.907] [bmv2] [D] [thread 5051] [34.0] [cxt 0] Dropping packet at the end of ingress
[03:46:55.042] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Processing packet received on port 1
[03:46:55.042] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser 'parser': start
[03:46:55.042] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser 'parser' entering state 'start'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Extracting header 'ethernet'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser state 'start': key is 0800
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Bytes parsed: 14
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Extracting header 'ipv4'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Bytes parsed: 34
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Extracting header 'tcp'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (2)
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Bytes parsed: 54
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Parser 'parser': end
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Pipeline 'ingress': start
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000e

[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Action MyIngress.ipv4_forward
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Applying table 'MyIngress.root'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Action MyIngress.set_leaf
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:46:55.043] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:46:55.043] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 1
[03:46:55.044] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:46:55.044] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:46:55.044] [bmv2] [T] [thread 5051] [35.0] [cxt 0] Action MyIngress.a11
[03:46:55.044] [bmv2] [T] [thread 5051] [35.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:46:55.044] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Pipeline 'ingress': end
[03:46:55.044] [bmv2] [D] [thread 5051] [35.0] [cxt 0] Egress port is 2
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Pipeline 'egress': start
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Pipeline 'egress': end
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Deparser 'deparser': start
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Updating checksum 'cksum'
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Deparsing header 'ethernet'
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Deparsing header 'ipv4'
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Deparsing header 'tcp'
[03:46:55.044] [bmv2] [D] [thread 5054] [35.0] [cxt 0] Deparser 'deparser': end
[03:46:55.044] [bmv2] [D] [thread 5056] [35.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Processing packet received on port 1
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser 'parser': start
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser 'parser' entering state 'start'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Extracting header 'ethernet'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser state 'start': key is 0800
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Bytes parsed: 14
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Extracting header 'ipv4'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Bytes parsed: 34
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Extracting header 'udp'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (2)
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Bytes parsed: 42
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Parser 'parser': end
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Pipeline 'ingress': start
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000003

[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Action MyIngress.ipv4_forward
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Applying table 'MyIngress.root'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Action MyIngress.set_leaf
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Table 'MyIngress.leaf1': miss
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Action entry is MyIngress.drop - 
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] Action MyIngress.drop
[03:46:56.188] [bmv2] [T] [thread 5051] [36.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Pipeline 'ingress': end
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Egress port is 511
[03:46:56.188] [bmv2] [D] [thread 5051] [36.0] [cxt 0] Dropping packet at the end of ingress
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Processing packet received on port 1
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser 'parser': start
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser 'parser' entering state 'start'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Extracting header 'ethernet'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser state 'start': key is 0800
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Bytes parsed: 14
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Extracting header 'ipv4'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Bytes parsed: 34
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Extracting header 'tcp'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (2)
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Bytes parsed: 54
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Parser 'parser': end
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Pipeline 'ingress': start
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Action MyIngress.ipv4_forward
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Applying table 'MyIngress.root'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000003
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 06

[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Table 'MyIngress.root': hit with handle 5
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Dumping entry 5
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 6
Action entry: MyIngress.set_leaf - 4,

[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Action entry is MyIngress.set_leaf - 4,
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Action MyIngress.set_leaf
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is true
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Applying table 'MyIngress.leaf4'
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000003
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 06

[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Table 'MyIngress.leaf4': hit with handle 1
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] Action MyIngress.a7
[03:46:57.405] [bmv2] [T] [thread 5051] [37.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Pipeline 'ingress': end
[03:46:57.405] [bmv2] [D] [thread 5051] [37.0] [cxt 0] Egress port is 2
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Pipeline 'egress': start
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Pipeline 'egress': end
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Deparser 'deparser': start
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Updating checksum 'cksum'
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Deparsing header 'ethernet'
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Deparsing header 'ipv4'
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Deparsing header 'tcp'
[03:46:57.405] [bmv2] [D] [thread 5054] [37.0] [cxt 0] Deparser 'deparser': end
[03:46:57.405] [bmv2] [D] [thread 5056] [37.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Processing packet received on port 1
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser 'parser': start
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser 'parser' entering state 'start'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Extracting header 'ethernet'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser state 'start': key is 0800
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Bytes parsed: 14
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Extracting header 'ipv4'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Bytes parsed: 34
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Extracting header 'udp'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Bytes parsed: 42
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Parser 'parser': end
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Pipeline 'ingress': start
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Action MyIngress.ipv4_forward
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Applying table 'MyIngress.root'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0004
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Action MyIngress.null_end
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Applying table 'tbl_drop'
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Looking up key:

[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Table 'tbl_drop': miss
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Action entry is MyIngress.drop - 
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] Action MyIngress.drop
[03:46:58.607] [bmv2] [T] [thread 5051] [38.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Pipeline 'ingress': end
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Egress port is 511
[03:46:58.607] [bmv2] [D] [thread 5051] [38.0] [cxt 0] Dropping packet at the end of ingress
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Processing packet received on port 1
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser 'parser': start
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser 'parser' entering state 'start'
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Extracting header 'ethernet'
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser state 'start': key is 0800
[03:46:59.841] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Bytes parsed: 14
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Extracting header 'ipv4'
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:46:59.841] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Bytes parsed: 34
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Extracting header 'udp'
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:46:59.841] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Bytes parsed: 42
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Parser 'parser': end
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Pipeline 'ingress': start
[03:46:59.841] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:46:59.841] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:46:59.841] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Action MyIngress.ipv4_forward
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Applying table 'MyIngress.root'
[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Table 'MyIngress.root': hit with handle 7
[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Action entry is MyIngress.set_leaf - 7,
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Action MyIngress.set_leaf
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is true
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Applying table 'MyIngress.leaf7'
[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Table 'MyIngress.leaf7': miss
[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Action entry is MyIngress.drop - 
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] Action MyIngress.drop
[03:46:59.842] [bmv2] [T] [thread 5051] [39.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Pipeline 'ingress': end
[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Egress port is 511
[03:46:59.842] [bmv2] [D] [thread 5051] [39.0] [cxt 0] Dropping packet at the end of ingress
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Processing packet received on port 1
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser 'parser': start
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Extracting header 'ethernet'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser state 'start': key is 0800
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Bytes parsed: 14
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Extracting header 'ipv4'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Bytes parsed: 34
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Extracting header 'udp'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Bytes parsed: 42
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Parser 'parser': end
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Pipeline 'ingress': start
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000008
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Table 'MyIngress.root': hit with handle 7
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Action entry is MyIngress.set_leaf - 7,
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Action MyIngress.set_leaf
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is true
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Applying table 'MyIngress.leaf7'
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000008
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Table 'MyIngress.leaf7': miss
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Action entry is MyIngress.drop - 
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] Action MyIngress.drop
[03:47:00.969] [bmv2] [T] [thread 5051] [40.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Pipeline 'ingress': end
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Egress port is 511
[03:47:00.969] [bmv2] [D] [thread 5051] [40.0] [cxt 0] Dropping packet at the end of ingress
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Processing packet received on port 1
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser 'parser': start
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Extracting header 'ethernet'
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser state 'start': key is 0800
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Bytes parsed: 14
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Extracting header 'ipv4'
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Bytes parsed: 34
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Extracting header 'tcp'
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (4)
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Bytes parsed: 54
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Parser 'parser': end
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Pipeline 'ingress': start
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:02.111] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:02.111] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Action MyIngress.set_index
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Applying table 'MyIngress.node1'
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Table 'MyIngress.node1': hit with handle 1
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0004 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.set_leaf - 6,

[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Action entry is MyIngress.set_leaf - 6,
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Action MyIngress.set_leaf
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is true
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Applying table 'MyIngress.leaf6'
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Table 'MyIngress.leaf6': hit with handle 1
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] Action MyIngress.a7
[03:47:02.112] [bmv2] [T] [thread 5051] [41.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Pipeline 'ingress': end
[03:47:02.112] [bmv2] [D] [thread 5051] [41.0] [cxt 0] Egress port is 2
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Pipeline 'egress': start
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Pipeline 'egress': end
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Deparser 'deparser': start
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Updating checksum 'cksum'
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Deparsing header 'ethernet'
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Deparsing header 'ipv4'
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Deparsing header 'tcp'
[03:47:02.112] [bmv2] [D] [thread 5054] [41.0] [cxt 0] Deparser 'deparser': end
[03:47:02.112] [bmv2] [D] [thread 5056] [41.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Processing packet received on port 1
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser 'parser': start
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Extracting header 'ethernet'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser state 'start': key is 0800
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Bytes parsed: 14
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Extracting header 'ipv4'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Bytes parsed: 34
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Extracting header 'tcp'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (2)
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Bytes parsed: 54
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Parser 'parser': end
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Pipeline 'ingress': start
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Action MyIngress.set_leaf
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 1
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] Action MyIngress.a11
[03:47:03.261] [bmv2] [T] [thread 5051] [42.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Pipeline 'ingress': end
[03:47:03.261] [bmv2] [D] [thread 5051] [42.0] [cxt 0] Egress port is 2
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Pipeline 'egress': start
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Pipeline 'egress': end
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Deparser 'deparser': start
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Updating checksum 'cksum'
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Deparsing header 'ethernet'
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Deparsing header 'ipv4'
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Deparsing header 'tcp'
[03:47:03.261] [bmv2] [D] [thread 5054] [42.0] [cxt 0] Deparser 'deparser': end
[03:47:03.261] [bmv2] [D] [thread 5056] [42.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Processing packet received on port 1
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser 'parser': start
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Extracting header 'ethernet'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser state 'start': key is 0800
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Bytes parsed: 14
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Extracting header 'ipv4'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Bytes parsed: 34
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Extracting header 'udp'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Bytes parsed: 42
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Parser 'parser': end
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Pipeline 'ingress': start
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000002

[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000002
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Action MyIngress.null_end
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Applying table 'tbl_drop'
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Looking up key:

[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Table 'tbl_drop': miss
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Action entry is MyIngress.drop - 
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] Action MyIngress.drop
[03:47:04.419] [bmv2] [T] [thread 5051] [43.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Pipeline 'ingress': end
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Egress port is 511
[03:47:04.419] [bmv2] [D] [thread 5051] [43.0] [cxt 0] Dropping packet at the end of ingress
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Processing packet received on port 1
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser 'parser': start
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Extracting header 'ethernet'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser state 'start': key is 0800
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Bytes parsed: 14
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Extracting header 'ipv4'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Bytes parsed: 34
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Extracting header 'tcp'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (3)
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (3)
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Bytes parsed: 54
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Parser 'parser': end
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Pipeline 'ingress': start
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Action MyIngress.set_index
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Applying table 'MyIngress.node1'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Table 'MyIngress.node1': hit with handle 0
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Action entry is MyIngress.set_leaf - 5,
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Action MyIngress.set_leaf
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is true
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Applying table 'MyIngress.leaf5'
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Table 'MyIngress.leaf5': hit with handle 2
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] Action MyIngress.a11
[03:47:05.744] [bmv2] [T] [thread 5051] [44.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Pipeline 'ingress': end
[03:47:05.744] [bmv2] [D] [thread 5051] [44.0] [cxt 0] Egress port is 2
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Pipeline 'egress': start
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Pipeline 'egress': end
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Deparser 'deparser': start
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Updating checksum 'cksum'
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Deparsing header 'ethernet'
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Deparsing header 'ipv4'
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Deparsing header 'tcp'
[03:47:05.744] [bmv2] [D] [thread 5054] [44.0] [cxt 0] Deparser 'deparser': end
[03:47:05.744] [bmv2] [D] [thread 5056] [44.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:47:06.886] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Processing packet received on port 1
[03:47:06.886] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser 'parser': start
[03:47:06.886] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:06.886] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:06.886] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:06.886] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Extracting header 'ethernet'
[03:47:06.886] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser state 'start': key is 0800
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Bytes parsed: 14
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Extracting header 'ipv4'
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Bytes parsed: 34
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Extracting header 'udp'
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Bytes parsed: 42
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Parser 'parser': end
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Pipeline 'ingress': start
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000009

[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000006
* hdr.ipv4.dstAddr    : 00000009
* meta.sport          : 0004
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Table 'MyIngress.root': hit with handle 4
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Dumping entry 4
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 5
Action entry: MyIngress.null_end - 

[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Action MyIngress.null_end
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Applying table 'tbl_drop'
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Looking up key:

[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Table 'tbl_drop': miss
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Action entry is MyIngress.drop - 
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] Action MyIngress.drop
[03:47:06.887] [bmv2] [T] [thread 5051] [45.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Pipeline 'ingress': end
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Egress port is 511
[03:47:06.887] [bmv2] [D] [thread 5051] [45.0] [cxt 0] Dropping packet at the end of ingress
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Processing packet received on port 1
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser 'parser': start
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Extracting header 'ethernet'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser state 'start': key is 0800
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Bytes parsed: 14
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Extracting header 'ipv4'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Bytes parsed: 34
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Extracting header 'udp'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Bytes parsed: 42
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Parser 'parser': end
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Pipeline 'ingress': start
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000002

[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 00000002
* meta.sport          : 0003
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:47:08.078] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Action MyIngress.null_end
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:47:08.078] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Applying table 'tbl_drop'
[03:47:08.079] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Looking up key:

[03:47:08.079] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Table 'tbl_drop': miss
[03:47:08.079] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Action entry is MyIngress.drop - 
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] Action MyIngress.drop
[03:47:08.079] [bmv2] [T] [thread 5051] [46.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:08.079] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Pipeline 'ingress': end
[03:47:08.079] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Egress port is 511
[03:47:08.079] [bmv2] [D] [thread 5051] [46.0] [cxt 0] Dropping packet at the end of ingress
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Processing packet received on port 1
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser 'parser': start
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Extracting header 'ethernet'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser state 'start': key is 0800
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Bytes parsed: 14
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Extracting header 'ipv4'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Bytes parsed: 34
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Extracting header 'tcp'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (4)
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Bytes parsed: 54
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Parser 'parser': end
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Pipeline 'ingress': start
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000e

[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0004
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Action MyIngress.set_leaf
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0004
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 0
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a7 - 

[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] Action MyIngress.a7
[03:47:09.241] [bmv2] [T] [thread 5051] [47.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:47:09.241] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Pipeline 'ingress': end
[03:47:09.242] [bmv2] [D] [thread 5051] [47.0] [cxt 0] Egress port is 2
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Pipeline 'egress': start
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Pipeline 'egress': end
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Deparser 'deparser': start
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Updating checksum 'cksum'
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Deparsing header 'ethernet'
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Deparsing header 'ipv4'
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Deparsing header 'tcp'
[03:47:09.242] [bmv2] [D] [thread 5054] [47.0] [cxt 0] Deparser 'deparser': end
[03:47:09.242] [bmv2] [D] [thread 5056] [47.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Processing packet received on port 1
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser 'parser': start
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Extracting header 'ethernet'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser state 'start': key is 0800
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Bytes parsed: 14
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Extracting header 'ipv4'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Bytes parsed: 34
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Extracting header 'udp'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Bytes parsed: 42
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Parser 'parser': end
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Pipeline 'ingress': start
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000b

[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000009
* hdr.ipv4.dstAddr    : 0000000b
* meta.sport          : 0003
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Action MyIngress.null_end
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Applying table 'tbl_drop'
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Looking up key:

[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Table 'tbl_drop': miss
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Action entry is MyIngress.drop - 
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] Action MyIngress.drop
[03:47:10.463] [bmv2] [T] [thread 5051] [48.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Pipeline 'ingress': end
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Egress port is 511
[03:47:10.463] [bmv2] [D] [thread 5051] [48.0] [cxt 0] Dropping packet at the end of ingress
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Processing packet received on port 1
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser 'parser': start
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Extracting header 'ethernet'
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser state 'start': key is 0800
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Bytes parsed: 14
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Extracting header 'ipv4'
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Bytes parsed: 34
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Extracting header 'udp'
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Bytes parsed: 42
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Parser 'parser': end
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Pipeline 'ingress': start
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000000

[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:11.709] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:11.709] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Action MyIngress.set_leaf
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Table 'MyIngress.leaf1': miss
[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Action entry is MyIngress.drop - 
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] Action MyIngress.drop
[03:47:11.710] [bmv2] [T] [thread 5051] [49.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Pipeline 'ingress': end
[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Egress port is 511
[03:47:11.710] [bmv2] [D] [thread 5051] [49.0] [cxt 0] Dropping packet at the end of ingress
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Processing packet received on port 1
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser 'parser': start
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Extracting header 'ethernet'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser state 'start': key is 0800
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Bytes parsed: 14
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Extracting header 'ipv4'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Bytes parsed: 34
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Extracting header 'tcp'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (3)
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (3)
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Bytes parsed: 54
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Parser 'parser': end
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Pipeline 'ingress': start
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Action MyIngress.set_index
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Applying table 'MyIngress.node1'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Table 'MyIngress.node1': hit with handle 0
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Action entry is MyIngress.set_leaf - 5,
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Action MyIngress.set_leaf
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is true
[03:47:12.909] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Applying table 'MyIngress.leaf5'
[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:47:12.909] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Table 'MyIngress.leaf5': hit with handle 1
[03:47:12.910] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:47:12.910] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:47:12.910] [bmv2] [T] [thread 5051] [50.0] [cxt 0] Action MyIngress.a7
[03:47:12.910] [bmv2] [T] [thread 5051] [50.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:47:12.910] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Pipeline 'ingress': end
[03:47:12.910] [bmv2] [D] [thread 5051] [50.0] [cxt 0] Egress port is 2
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Pipeline 'egress': start
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Pipeline 'egress': end
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Deparser 'deparser': start
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Updating checksum 'cksum'
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Deparsing header 'ethernet'
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Deparsing header 'ipv4'
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Deparsing header 'tcp'
[03:47:12.910] [bmv2] [D] [thread 5054] [50.0] [cxt 0] Deparser 'deparser': end
[03:47:12.910] [bmv2] [D] [thread 5056] [50.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Processing packet received on port 1
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser 'parser': start
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Extracting header 'ethernet'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser state 'start': key is 0800
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Bytes parsed: 14
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Extracting header 'ipv4'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Bytes parsed: 34
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Extracting header 'tcp'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Bytes parsed: 54
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Parser 'parser': end
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Pipeline 'ingress': start
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000006

[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000006
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Table 'MyIngress.root': hit with handle 3
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Dumping entry 3
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 4
Action entry: MyIngress.set_leaf - 3,

[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Action entry is MyIngress.set_leaf - 3,
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Action MyIngress.set_leaf
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is true
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Applying table 'MyIngress.leaf3'
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000006
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Table 'MyIngress.leaf3': hit with handle 0
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a8 - 

[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Action entry is MyIngress.a8 - 
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] Action MyIngress.a8
[03:47:14.129] [bmv2] [T] [thread 5051] [51.0] [cxt 0] DemoNew.p4(167) Primitive hdr.ipv4.tos = 8
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Pipeline 'ingress': end
[03:47:14.129] [bmv2] [D] [thread 5051] [51.0] [cxt 0] Egress port is 2
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Pipeline 'egress': start
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Pipeline 'egress': end
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Deparser 'deparser': start
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Updating checksum 'cksum'
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Deparsing header 'ethernet'
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Deparsing header 'ipv4'
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Deparsing header 'tcp'
[03:47:14.129] [bmv2] [D] [thread 5054] [51.0] [cxt 0] Deparser 'deparser': end
[03:47:14.129] [bmv2] [D] [thread 5056] [51.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Processing packet received on port 1
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser 'parser': start
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser 'parser' entering state 'start'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Extracting header 'ethernet'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser state 'start': key is 0800
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Bytes parsed: 14
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Extracting header 'ipv4'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Bytes parsed: 34
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Extracting header 'udp'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Bytes parsed: 42
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Parser 'parser': end
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Pipeline 'ingress': start
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000003

[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Action MyIngress.ipv4_forward
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Applying table 'MyIngress.root'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000001
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0004
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Action MyIngress.null_end
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Applying table 'tbl_drop'
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Looking up key:

[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Table 'tbl_drop': miss
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Action entry is MyIngress.drop - 
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] Action MyIngress.drop
[03:47:15.265] [bmv2] [T] [thread 5051] [52.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Pipeline 'ingress': end
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Egress port is 511
[03:47:15.265] [bmv2] [D] [thread 5051] [52.0] [cxt 0] Dropping packet at the end of ingress
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Processing packet received on port 1
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser 'parser': start
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Extracting header 'ethernet'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser state 'start': key is 0800
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Bytes parsed: 14
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Extracting header 'ipv4'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Bytes parsed: 34
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Extracting header 'udp'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Bytes parsed: 42
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Parser 'parser': end
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Pipeline 'ingress': start
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000000

[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0003
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Action MyIngress.set_leaf
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0003
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Table 'MyIngress.leaf1': hit with handle 0
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0002 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.a9 - 

[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Action entry is MyIngress.a9 - 
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] Action MyIngress.a9
[03:48:03.302] [bmv2] [T] [thread 5051] [53.0] [cxt 0] DemoNew.p4(168) Primitive hdr.ipv4.tos = 9
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Pipeline 'ingress': end
[03:48:03.302] [bmv2] [D] [thread 5051] [53.0] [cxt 0] Egress port is 2
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Pipeline 'egress': start
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Pipeline 'egress': end
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Deparser 'deparser': start
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Updating checksum 'cksum'
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Deparsing header 'ethernet'
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Deparsing header 'ipv4'
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Deparsing header 'udp'
[03:48:03.302] [bmv2] [D] [thread 5054] [53.0] [cxt 0] Deparser 'deparser': end
[03:48:03.302] [bmv2] [D] [thread 5056] [53.0] [cxt 0] Transmitting packet of size 51 out of port 2
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Processing packet received on port 1
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser 'parser': start
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Extracting header 'ethernet'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser state 'start': key is 0800
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Bytes parsed: 14
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Extracting header 'ipv4'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Bytes parsed: 34
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Extracting header 'udp'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (3)
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Bytes parsed: 42
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Parser 'parser': end
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Pipeline 'ingress': start
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000c

[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000c
* meta.sport          : 0004
* meta.dport          : 0003
* hdr.ipv4.protocol   : 11

[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Table 'MyIngress.root': hit with handle 9
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Dumping entry 9
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 10
Action entry: MyIngress.set_leaf - 9,

[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Action entry is MyIngress.set_leaf - 9,
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Action MyIngress.set_leaf
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is true
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Applying table 'MyIngress.leaf9'
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000c
* meta.sport          : 0004
* meta.dport          : 0003
* hdr.ipv4.protocol   : 11

[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Table 'MyIngress.leaf9': miss
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] Action MyIngress.drop
[03:48:04.439] [bmv2] [T] [thread 5051] [54.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Pipeline 'ingress': end
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Egress port is 511
[03:48:04.439] [bmv2] [D] [thread 5051] [54.0] [cxt 0] Dropping packet at the end of ingress
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Processing packet received on port 1
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser 'parser': start
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Extracting header 'ethernet'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser state 'start': key is 0800
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Bytes parsed: 14
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Extracting header 'ipv4'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Bytes parsed: 34
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Extracting header 'tcp'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (2)
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Bytes parsed: 54
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Parser 'parser': end
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Pipeline 'ingress': start
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000e

[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:05.585] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:05.585] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Action MyIngress.set_leaf
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 1
[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] Action MyIngress.a11
[03:48:05.586] [bmv2] [T] [thread 5051] [55.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Pipeline 'ingress': end
[03:48:05.586] [bmv2] [D] [thread 5051] [55.0] [cxt 0] Egress port is 2
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Pipeline 'egress': start
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Pipeline 'egress': end
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Deparser 'deparser': start
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Updating checksum 'cksum'
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Deparsing header 'ethernet'
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Deparsing header 'ipv4'
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Deparsing header 'tcp'
[03:48:05.586] [bmv2] [D] [thread 5054] [55.0] [cxt 0] Deparser 'deparser': end
[03:48:05.586] [bmv2] [D] [thread 5056] [55.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Processing packet received on port 1
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser 'parser': start
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Extracting header 'ethernet'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser state 'start': key is 0800
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Bytes parsed: 14
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Extracting header 'ipv4'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Bytes parsed: 34
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Extracting header 'udp'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (2)
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Bytes parsed: 42
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Parser 'parser': end
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Pipeline 'ingress': start
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000003

[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:48:06.721] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Action MyIngress.set_leaf
[03:48:06.721] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:06.722] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:06.722] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:06.722] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:48:06.722] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:48:06.722] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:48:06.722] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Table 'MyIngress.leaf1': miss
[03:48:06.722] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:06.722] [bmv2] [T] [thread 5051] [56.0] [cxt 0] Action MyIngress.drop
[03:48:06.722] [bmv2] [T] [thread 5051] [56.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:06.722] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Pipeline 'ingress': end
[03:48:06.722] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Egress port is 511
[03:48:06.722] [bmv2] [D] [thread 5051] [56.0] [cxt 0] Dropping packet at the end of ingress
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Processing packet received on port 1
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser 'parser': start
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Extracting header 'ethernet'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser state 'start': key is 0800
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Bytes parsed: 14
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Extracting header 'ipv4'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Bytes parsed: 34
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Extracting header 'tcp'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (2)
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Bytes parsed: 54
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Parser 'parser': end
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Pipeline 'ingress': start
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000003
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 06

[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Table 'MyIngress.root': hit with handle 5
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Dumping entry 5
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 6
Action entry: MyIngress.set_leaf - 4,

[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Action entry is MyIngress.set_leaf - 4,
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Action MyIngress.set_leaf
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is true
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Applying table 'MyIngress.leaf4'
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000003
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 06

[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Table 'MyIngress.leaf4': hit with handle 1
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] Action MyIngress.a7
[03:48:07.846] [bmv2] [T] [thread 5051] [57.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Pipeline 'ingress': end
[03:48:07.846] [bmv2] [D] [thread 5051] [57.0] [cxt 0] Egress port is 2
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Pipeline 'egress': start
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Pipeline 'egress': end
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Deparser 'deparser': start
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Updating checksum 'cksum'
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Deparsing header 'ethernet'
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Deparsing header 'ipv4'
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Deparsing header 'tcp'
[03:48:07.846] [bmv2] [D] [thread 5054] [57.0] [cxt 0] Deparser 'deparser': end
[03:48:07.846] [bmv2] [D] [thread 5056] [57.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Processing packet received on port 1
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser 'parser': start
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Extracting header 'ethernet'
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser state 'start': key is 0800
[03:48:08.982] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Bytes parsed: 14
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Extracting header 'ipv4'
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:08.982] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Bytes parsed: 34
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Extracting header 'udp'
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:08.982] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Bytes parsed: 42
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Parser 'parser': end
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Pipeline 'ingress': start
[03:48:08.982] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:08.982] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:48:08.982] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000e
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0004
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Action MyIngress.null_end
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Applying table 'tbl_drop'
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Looking up key:

[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Table 'tbl_drop': miss
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] Action MyIngress.drop
[03:48:08.983] [bmv2] [T] [thread 5051] [58.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Pipeline 'ingress': end
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Egress port is 511
[03:48:08.983] [bmv2] [D] [thread 5051] [58.0] [cxt 0] Dropping packet at the end of ingress
[03:48:10.146] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Processing packet received on port 1
[03:48:10.146] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser 'parser': start
[03:48:10.146] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:10.146] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:10.146] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:10.146] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Extracting header 'ethernet'
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser state 'start': key is 0800
[03:48:10.147] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Bytes parsed: 14
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Extracting header 'ipv4'
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:10.147] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Bytes parsed: 34
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Extracting header 'udp'
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:10.147] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Bytes parsed: 42
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Parser 'parser': end
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Pipeline 'ingress': start
[03:48:10.147] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:10.147] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:10.147] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:10.147] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Table 'MyIngress.root': hit with handle 7
[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Action entry is MyIngress.set_leaf - 7,
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Action MyIngress.set_leaf
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is true
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Applying table 'MyIngress.leaf7'
[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Table 'MyIngress.leaf7': miss
[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] Action MyIngress.drop
[03:48:10.150] [bmv2] [T] [thread 5051] [59.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Pipeline 'ingress': end
[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Egress port is 511
[03:48:10.150] [bmv2] [D] [thread 5051] [59.0] [cxt 0] Dropping packet at the end of ingress
[03:48:11.325] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Processing packet received on port 1
[03:48:11.325] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser 'parser': start
[03:48:11.327] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:11.327] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:11.327] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Extracting header 'ethernet'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser state 'start': key is 0800
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Bytes parsed: 14
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Extracting header 'ipv4'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Bytes parsed: 34
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Extracting header 'udp'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Bytes parsed: 42
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Parser 'parser': end
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Pipeline 'ingress': start
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000008
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Table 'MyIngress.root': hit with handle 7
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Dumping entry 7
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 8
Action entry: MyIngress.set_leaf - 7,

[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Action entry is MyIngress.set_leaf - 7,
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Action MyIngress.set_leaf
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is true
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Applying table 'MyIngress.leaf7'
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000008
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0001
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Table 'MyIngress.leaf7': miss
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] Action MyIngress.drop
[03:48:11.328] [bmv2] [T] [thread 5051] [60.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Pipeline 'ingress': end
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Egress port is 511
[03:48:11.328] [bmv2] [D] [thread 5051] [60.0] [cxt 0] Dropping packet at the end of ingress
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Processing packet received on port 1
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser 'parser': start
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Extracting header 'ethernet'
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser state 'start': key is 0800
[03:48:12.528] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Bytes parsed: 14
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Extracting header 'ipv4'
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:12.528] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Bytes parsed: 34
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Extracting header 'tcp'
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (4)
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:12.528] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Bytes parsed: 54
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Parser 'parser': end
[03:48:12.528] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Pipeline 'ingress': start
[03:48:12.528] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Action MyIngress.set_index
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Applying table 'MyIngress.node1'
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Table 'MyIngress.node1': hit with handle 1
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0004 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.set_leaf - 6,

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Action entry is MyIngress.set_leaf - 6,
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Action MyIngress.set_leaf
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is true
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Applying table 'MyIngress.leaf6'
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000000
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 06

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Table 'MyIngress.leaf6': hit with handle 1
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] Action MyIngress.a7
[03:48:12.529] [bmv2] [T] [thread 5051] [61.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Pipeline 'ingress': end
[03:48:12.529] [bmv2] [D] [thread 5051] [61.0] [cxt 0] Egress port is 2
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Pipeline 'egress': start
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Pipeline 'egress': end
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Deparser 'deparser': start
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Updating checksum 'cksum'
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Deparsing header 'ethernet'
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Deparsing header 'ipv4'
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Deparsing header 'tcp'
[03:48:12.529] [bmv2] [D] [thread 5054] [61.0] [cxt 0] Deparser 'deparser': end
[03:48:12.529] [bmv2] [D] [thread 5056] [61.0] [cxt 0] Transmitting packet of size 63 out of port 2
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Processing packet received on port 1
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser 'parser': start
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Extracting header 'ethernet'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser state 'start': key is 0800
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Bytes parsed: 14
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Extracting header 'ipv4'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Bytes parsed: 34
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Extracting header 'tcp'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (2)
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Bytes parsed: 54
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Parser 'parser': end
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Pipeline 'ingress': start
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000d

[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Action MyIngress.set_leaf
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 0000000d
* meta.sport          : 0002
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 1
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a11 - 

[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] Action MyIngress.a11
[03:48:13.693] [bmv2] [T] [thread 5051] [62.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Pipeline 'ingress': end
[03:48:13.693] [bmv2] [D] [thread 5051] [62.0] [cxt 0] Egress port is 2
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Pipeline 'egress': start
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Pipeline 'egress': end
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Deparser 'deparser': start
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Updating checksum 'cksum'
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Deparsing header 'ethernet'
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Deparsing header 'ipv4'
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Deparsing header 'tcp'
[03:48:13.693] [bmv2] [D] [thread 5054] [62.0] [cxt 0] Deparser 'deparser': end
[03:48:13.693] [bmv2] [D] [thread 5056] [62.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:48:14.894] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Processing packet received on port 1
[03:48:14.894] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser 'parser': start
[03:48:14.894] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:14.894] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:14.894] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Extracting header 'ethernet'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser state 'start': key is 0800
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Bytes parsed: 14
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Extracting header 'ipv4'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Bytes parsed: 34
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Extracting header 'udp'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Bytes parsed: 42
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Parser 'parser': end
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Pipeline 'ingress': start
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000002

[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000002
* meta.sport          : 0001
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Action MyIngress.null_end
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Applying table 'tbl_drop'
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Looking up key:

[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Table 'tbl_drop': miss
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] Action MyIngress.drop
[03:48:14.895] [bmv2] [T] [thread 5051] [63.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Pipeline 'ingress': end
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Egress port is 511
[03:48:14.895] [bmv2] [D] [thread 5051] [63.0] [cxt 0] Dropping packet at the end of ingress
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Processing packet received on port 1
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser 'parser': start
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Extracting header 'ethernet'
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser state 'start': key is 0800
[03:48:16.049] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Bytes parsed: 14
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Extracting header 'ipv4'
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:16.049] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Bytes parsed: 34
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Extracting header 'tcp'
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (3)
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (3)
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:16.049] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Bytes parsed: 54
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Parser 'parser': end
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Pipeline 'ingress': start
[03:48:16.049] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:16.049] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:16.049] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Action MyIngress.set_index
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Applying table 'MyIngress.node1'
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Table 'MyIngress.node1': hit with handle 0
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Action entry is MyIngress.set_leaf - 5,
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Action MyIngress.set_leaf
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is true
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Applying table 'MyIngress.leaf5'
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000a
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Table 'MyIngress.leaf5': hit with handle 2
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 3
Action entry: MyIngress.a11 - 

[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Action entry is MyIngress.a11 - 
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] Action MyIngress.a11
[03:48:16.050] [bmv2] [T] [thread 5051] [64.0] [cxt 0] DemoNew.p4(169) Primitive hdr.ipv4.tos = 11
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Pipeline 'ingress': end
[03:48:16.050] [bmv2] [D] [thread 5051] [64.0] [cxt 0] Egress port is 2
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Pipeline 'egress': start
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Pipeline 'egress': end
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Deparser 'deparser': start
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Updating checksum 'cksum'
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Deparsing header 'ethernet'
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Deparsing header 'ipv4'
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Deparsing header 'tcp'
[03:48:16.050] [bmv2] [D] [thread 5054] [64.0] [cxt 0] Deparser 'deparser': end
[03:48:16.050] [bmv2] [D] [thread 5056] [64.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Processing packet received on port 1
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser 'parser': start
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Extracting header 'ethernet'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser state 'start': key is 0800
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Bytes parsed: 14
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Extracting header 'ipv4'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Bytes parsed: 34
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Extracting header 'udp'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (2)
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Bytes parsed: 42
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Parser 'parser': end
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Pipeline 'ingress': start
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000009

[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000006
* hdr.ipv4.dstAddr    : 00000009
* meta.sport          : 0004
* meta.dport          : 0002
* hdr.ipv4.protocol   : 11

[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Table 'MyIngress.root': hit with handle 4
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Dumping entry 4
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 5
Action entry: MyIngress.null_end - 

[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Action MyIngress.null_end
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Applying table 'tbl_drop'
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Looking up key:

[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Table 'tbl_drop': miss
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] Action MyIngress.drop
[03:48:17.177] [bmv2] [T] [thread 5051] [65.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Pipeline 'ingress': end
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Egress port is 511
[03:48:17.177] [bmv2] [D] [thread 5051] [65.0] [cxt 0] Dropping packet at the end of ingress
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Processing packet received on port 1
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser 'parser': start
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Extracting header 'ethernet'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser state 'start': key is 0800
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Bytes parsed: 14
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Extracting header 'ipv4'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Bytes parsed: 34
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Extracting header 'udp'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Bytes parsed: 42
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Parser 'parser': end
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Pipeline 'ingress': start
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000002

[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000007
* hdr.ipv4.dstAddr    : 00000002
* meta.sport          : 0003
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Action MyIngress.null_end
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Applying table 'tbl_drop'
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Looking up key:

[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Table 'tbl_drop': miss
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] Action MyIngress.drop
[03:48:18.410] [bmv2] [T] [thread 5051] [66.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Pipeline 'ingress': end
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Egress port is 511
[03:48:18.410] [bmv2] [D] [thread 5051] [66.0] [cxt 0] Dropping packet at the end of ingress
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Processing packet received on port 1
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser 'parser': start
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Extracting header 'ethernet'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser state 'start': key is 0800
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Bytes parsed: 14
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Extracting header 'ipv4'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Bytes parsed: 34
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Extracting header 'tcp'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (4)
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Bytes parsed: 54
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Parser 'parser': end
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Pipeline 'ingress': start
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000e

[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0004
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Table 'MyIngress.root': hit with handle 8
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Dumping entry 8
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     0000000c -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 9
Action entry: MyIngress.set_leaf - 8,

[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Action entry is MyIngress.set_leaf - 8,
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Action MyIngress.set_leaf
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is true
[03:48:19.571] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Applying table 'MyIngress.leaf8'
[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 0000000e
* meta.sport          : 0004
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:19.571] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Table 'MyIngress.leaf8': hit with handle 0
[03:48:19.572] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a7 - 

[03:48:19.572] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:48:19.572] [bmv2] [T] [thread 5051] [67.0] [cxt 0] Action MyIngress.a7
[03:48:19.572] [bmv2] [T] [thread 5051] [67.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:48:19.572] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Pipeline 'ingress': end
[03:48:19.572] [bmv2] [D] [thread 5051] [67.0] [cxt 0] Egress port is 2
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Pipeline 'egress': start
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Pipeline 'egress': end
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Deparser 'deparser': start
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Updating checksum 'cksum'
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Deparsing header 'ethernet'
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Deparsing header 'ipv4'
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Deparsing header 'tcp'
[03:48:19.572] [bmv2] [D] [thread 5054] [67.0] [cxt 0] Deparser 'deparser': end
[03:48:19.572] [bmv2] [D] [thread 5056] [67.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Processing packet received on port 1
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser 'parser': start
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Extracting header 'ethernet'
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser state 'start': key is 0800
[03:48:20.718] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Bytes parsed: 14
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Extracting header 'ipv4'
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:20.718] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Bytes parsed: 34
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Extracting header 'udp'
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (3)
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:20.718] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Bytes parsed: 42
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Parser 'parser': end
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Pipeline 'ingress': start
[03:48:20.718] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:20.718] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 0000000b

[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:20.718] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:20.719] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000009
* hdr.ipv4.dstAddr    : 0000000b
* meta.sport          : 0003
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:48:20.719] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:48:20.719] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:48:20.719] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Action MyIngress.null_end
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:20.719] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:48:20.720] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:48:20.720] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Applying table 'tbl_drop'
[03:48:20.720] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Looking up key:

[03:48:20.720] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Table 'tbl_drop': miss
[03:48:20.720] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:20.720] [bmv2] [T] [thread 5051] [68.0] [cxt 0] Action MyIngress.drop
[03:48:20.720] [bmv2] [T] [thread 5051] [68.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:20.720] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Pipeline 'ingress': end
[03:48:20.720] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Egress port is 511
[03:48:20.720] [bmv2] [D] [thread 5051] [68.0] [cxt 0] Dropping packet at the end of ingress
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Processing packet received on port 1
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser 'parser': start
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Extracting header 'ethernet'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser state 'start': key is 0800
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Bytes parsed: 14
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Extracting header 'ipv4'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Bytes parsed: 34
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Extracting header 'udp'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (1)
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (1)
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Bytes parsed: 42
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Parser 'parser': end
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Pipeline 'ingress': start
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000000

[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Table 'MyIngress.root': hit with handle 0
[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0002
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 1
Action entry: MyIngress.set_leaf - 1,

[03:48:21.877] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Action entry is MyIngress.set_leaf - 1,
[03:48:21.877] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Action MyIngress.set_leaf
[03:48:21.878] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:21.878] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:21.878] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:21.878] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is true
[03:48:21.878] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Applying table 'MyIngress.leaf1'
[03:48:21.878] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 0000000c
* hdr.ipv4.dstAddr    : 00000000
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 11

[03:48:21.878] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Table 'MyIngress.leaf1': miss
[03:48:21.878] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:21.878] [bmv2] [T] [thread 5051] [69.0] [cxt 0] Action MyIngress.drop
[03:48:21.878] [bmv2] [T] [thread 5051] [69.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:21.878] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Pipeline 'ingress': end
[03:48:21.878] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Egress port is 511
[03:48:21.878] [bmv2] [D] [thread 5051] [69.0] [cxt 0] Dropping packet at the end of ingress
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Processing packet received on port 1
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser 'parser': start
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Extracting header 'ethernet'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser state 'start': key is 0800
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Bytes parsed: 14
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Extracting header 'ipv4'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Bytes parsed: 34
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Extracting header 'tcp'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (3)
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (3)
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Bytes parsed: 54
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Parser 'parser': end
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Pipeline 'ingress': start
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000008

[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:23.164] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:48:23.164] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Table 'MyIngress.root': hit with handle 6
[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Dumping entry 6
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 7
Action entry: MyIngress.set_index - 1,

[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Action entry is MyIngress.set_index - 1,
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Action MyIngress.set_index
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(154) Primitive meta.index = lvl
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is true
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(470) Condition "meta.index == 1" (node_6) is true
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Applying table 'MyIngress.node1'
[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Table 'MyIngress.node1': hit with handle 0
[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0003
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.set_leaf - 5,

[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Action entry is MyIngress.set_leaf - 5,
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Action MyIngress.set_leaf
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is true
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Applying table 'MyIngress.leaf5'
[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000005
* hdr.ipv4.dstAddr    : 00000008
* meta.sport          : 0003
* meta.dport          : 0003
* hdr.ipv4.protocol   : 06

[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Table 'MyIngress.leaf5': hit with handle 1
[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 00000007
* hdr.ipv4.dstAddr    : RANGE     00000008 -> 0000000f
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 2
Action entry: MyIngress.a7 - 

[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Action entry is MyIngress.a7 - 
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] Action MyIngress.a7
[03:48:23.165] [bmv2] [T] [thread 5051] [70.0] [cxt 0] DemoNew.p4(166) Primitive hdr.ipv4.tos = 7
[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Pipeline 'ingress': end
[03:48:23.165] [bmv2] [D] [thread 5051] [70.0] [cxt 0] Egress port is 2
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Pipeline 'egress': start
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Pipeline 'egress': end
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Deparser 'deparser': start
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Updating checksum 'cksum'
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Deparsing header 'ethernet'
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Deparsing header 'ipv4'
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Deparsing header 'tcp'
[03:48:23.165] [bmv2] [D] [thread 5054] [70.0] [cxt 0] Deparser 'deparser': end
[03:48:23.165] [bmv2] [D] [thread 5056] [70.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:48:24.307] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Processing packet received on port 1
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser 'parser': start
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Extracting header 'ethernet'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser state 'start': key is 0800
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Bytes parsed: 14
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Extracting header 'ipv4'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser state 'parse_ipv4': key is 06
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Bytes parsed: 34
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser 'parser' entering state 'parse_tcp'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Extracting header 'tcp'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'tcp.srcPort' (1)
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'tcp.dstPort' (1)
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser state 'parse_tcp' has no switch, going to default next state
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Bytes parsed: 54
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Parser 'parser': end
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Pipeline 'ingress': start
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000006

[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000006
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Table 'MyIngress.root': hit with handle 3
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Dumping entry 3
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 4
Action entry: MyIngress.set_leaf - 3,

[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Action entry is MyIngress.set_leaf - 3,
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Action MyIngress.set_leaf
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(156) Primitive meta.leaf = lvl
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(156) Primitive meta.continue = 0
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is true
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Applying table 'MyIngress.leaf3'
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000004
* hdr.ipv4.dstAddr    : 00000006
* meta.sport          : 0001
* meta.dport          : 0001
* hdr.ipv4.protocol   : 06

[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Table 'MyIngress.leaf3': hit with handle 0
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Dumping entry 0
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000004 -> 00000007
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0001 -> 0004
* hdr.ipv4.protocol   : RANGE     06 -> 06
Priority: 1
Action entry: MyIngress.a8 - 

[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Action entry is MyIngress.a8 - 
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] Action MyIngress.a8
[03:48:24.308] [bmv2] [T] [thread 5051] [71.0] [cxt 0] DemoNew.p4(167) Primitive hdr.ipv4.tos = 8
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Pipeline 'ingress': end
[03:48:24.308] [bmv2] [D] [thread 5051] [71.0] [cxt 0] Egress port is 2
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Pipeline 'egress': start
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Pipeline 'egress': end
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Deparser 'deparser': start
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Updating checksum 'cksum'
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Deparsing header 'ethernet'
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Deparsing header 'ipv4'
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Deparsing header 'tcp'
[03:48:24.308] [bmv2] [D] [thread 5054] [71.0] [cxt 0] Deparser 'deparser': end
[03:48:24.308] [bmv2] [D] [thread 5056] [71.0] [cxt 0] Transmitting packet of size 64 out of port 2
[03:48:25.676] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Processing packet received on port 1
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser 'parser': start
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser 'parser' entering state 'start'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser set: setting field 'scalars.metadata.continue' to 1
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser set: setting field 'scalars.metadata.leaf' to 0
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Extracting header 'ethernet'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser state 'start': key is 0800
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Bytes parsed: 14
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser 'parser' entering state 'parse_ipv4'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Extracting header 'ipv4'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser set: setting field 'ipv4.tos' to 77
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser state 'parse_ipv4': key is 11
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Bytes parsed: 34
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser 'parser' entering state 'parse_udp'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Extracting header 'udp'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser set: setting field 'scalars.metadata.sport' from field 'udp.srcPort' (4)
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser set: setting field 'scalars.metadata.dport' from field 'udp.dstPort' (4)
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser state 'parse_udp' has no switch, going to default next state
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Bytes parsed: 42
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Parser 'parser': end
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Pipeline 'ingress': start
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(461) Condition "hdr.ipv4.isValid()" (node_2) is true
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Applying table 'MyIngress.ipv4_lpm'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Looking up key:
* hdr.ipv4.dstAddr    : 00000003

[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Table 'MyIngress.ipv4_lpm': hit with handle 1
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Dumping entry 1
Match key:
* hdr.ipv4.dstAddr    : LPM       00000000/1
Action entry: MyIngress.ipv4_forward - 80000000202,2,

[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Action entry is MyIngress.ipv4_forward - 80000000202,2,
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Action MyIngress.ipv4_forward
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(148) Primitive standard_metadata.egress_spec = port
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(149) Primitive hdr.ethernet.srcAddr = hdr.ethernet.dstAddr
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(150) Primitive hdr.ethernet.dstAddr = dstAddr
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(151) Primitive hdr.ipv4.ttl = hdr.ipv4.ttl - 1
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Applying table 'MyIngress.root'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Looking up key:
* hdr.ipv4.srcAddr    : 00000001
* hdr.ipv4.dstAddr    : 00000003
* meta.sport          : 0004
* meta.dport          : 0004
* hdr.ipv4.protocol   : 11

[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Table 'MyIngress.root': hit with handle 2
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Dumping entry 2
Match key:
* hdr.ipv4.srcAddr    : RANGE     00000000 -> 0000000f
* hdr.ipv4.dstAddr    : RANGE     00000000 -> 0000000b
* meta.sport          : RANGE     0001 -> 0004
* meta.dport          : RANGE     0003 -> 0004
* hdr.ipv4.protocol   : RANGE     11 -> 11
Priority: 3
Action entry: MyIngress.null_end - 

[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Action entry is MyIngress.null_end - 
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Action MyIngress.null_end
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(143) Primitive meta.continue = 0
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(469) Condition "meta.continue == 1" (node_5) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(496) Condition "meta.leaf == 1" (node_9) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(497) Condition "meta.leaf == 2" (node_11) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(498) Condition "meta.leaf == 3" (node_13) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(499) Condition "meta.leaf == 4" (node_15) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(500) Condition "meta.leaf == 5" (node_17) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(501) Condition "meta.leaf == 6" (node_19) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(502) Condition "meta.leaf == 7" (node_21) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(503) Condition "meta.leaf == 8" (node_23) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(504) Condition "meta.leaf == 9" (node_25) is false
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Applying table 'tbl_drop'
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Looking up key:

[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Table 'tbl_drop': miss
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Action entry is MyIngress.drop - 
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] Action MyIngress.drop
[03:48:25.677] [bmv2] [T] [thread 5051] [72.0] [cxt 0] DemoNew.p4(139) Primitive mark_to_drop(standard_metadata)
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Pipeline 'ingress': end
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Egress port is 511
[03:48:25.677] [bmv2] [D] [thread 5051] [72.0] [cxt 0] Dropping packet at the end of ingress
